@model Shampan.Models.TransportAllownaces

@{
    ViewData["Title"] = "Index";
    ////var message = ViewBag.SuccessMsg;
}
@Html.Partial("_Header",new HeaderModel(){ HeaderName = "Transport Allownace Entry", BreadCrums = new Dictionary<string, string>()
{
    {"/TransportAllownaces","Index"},
    {"","Index"},
}})

<link href="~/css/button.css" rel="stylesheet" />


<div class="modal fade" id="modal-default" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.ReasonOfUnPost)
                    <div class="input-group ">
                        @Html.TextArea("ReasonOfUnPost",null, new { @class = "  form-control form-control-sm " ,@id="UnPostReason"})
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal" id="modelClose">Close</button>
                <button type="button" class="btn btn-primary Submit">Submit</button>
            </div>
        </div>

    </div>

</div>

<div class="modal fade" id="modal-defaultReject" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.RejectedComments)
                    <div class="input-group ">
                        @Html.TextArea("RejectedComments",null, new { @class = "  form-control form-control-sm " ,@id="RejectedComments"})
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal" id="modelClose">Close</button>
                <button type="button" class="btn btn-primary RejectSubmit">Submit</button>
            </div>
        </div>

    </div>

</div>


<div class="modal fade" id="modal-defaultApproved" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                </button>
            </div>
            <div class="modal-body">
                <div class="col-sm-12">
                    @Html.LabelFor(model => model.CommentsL1)
                    <div class="input-group ">
                        @Html.TextArea("CommentsL1",null, new { @class = "  form-control form-control-sm " ,@id="CommentsL1"})
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal" id="modelClose">Close</button>
                <button type="button" class="btn btn-primary ApprovedSubmit">Submit</button>
            </div>
        </div>

    </div>

</div>




<div class="container-fluid">


    <form id="frm_TransportAllownaces">
        <div class="card card-secondary">


            <div class="card-header">
                <h3 class="card-title">Create Transport Allownace</h3>
            </div>


            <div class="card-body">

                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Operation)
                @Html.HiddenFor(model => model.IsPost)
                @Html.HiddenFor(model => model.Edit)

                <div class="form-group row">


                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.Code)
                        @Html.TextBoxFor(Model =>Model.Code , new { @class = "  form-control form-control-sm",@readonly="readonly" })
                        @Html.ValidationMessageFor(model => model.Code)

                    </div>

                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.Name)
                        @Html.TextBoxFor(Model =>Model.Name , new { @class = "  form-control form-control-sm" })
                        @Html.ValidationMessageFor(model => model.Name)

                    </div>


                    <div class="col-sm-2">

                        @Html.LabelFor(model => model.TeamId)
                        @Html.DropDownListFor(model => model.TeamId,Enumerable.Empty<SelectListItem>(),  new {  @class = "form-control form-control-sm",@data_selected=Model.TeamId })
                        @Html.ValidationMessageFor(model => model.TeamId)

                    </div>

                    <div class="col-sm-2">

                        @Html.LabelFor(model => model.AuditId)
                        @Html.DropDownListFor(model => model.AuditId,Enumerable.Empty<SelectListItem>(),  new {  @class = "form-control form-control-sm",@data_selected=Model.AuditId })
                        @Html.ValidationMessageFor(model => model.AuditId)

                    </div>


                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.FromDate)
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.FromDate, new { @class = "  form-control form-control-sm dateRange" })
                            <div class="input-group-append">
                                <div class="input-group-text"><i class="far fa-calendar-alt"></i></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.ToDate)
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.ToDate, new { @class = "  form-control form-control-sm dateRange" })
                            <div class="input-group-append">
                                <div class="input-group-text"><i class="far fa-calendar-alt"></i></div>
                            </div>
                        </div>
                    </div>



                </div>

                <div class="form-group row">

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.VisitingPalce)
                        @Html.TextAreaFor(Model =>Model.VisitingPalce , new { @class = "  form-control form-control-sm"})
                        @Html.ValidationMessageFor(model => model.VisitingPalce)

                    </div>
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.DepartureDate)
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.DepartureDate, new { @class = "  form-control form-control-sm dateRange" })
                            <div class="input-group-append">
                                <div class="input-group-text"><i class="far fa-calendar-alt"></i></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.ArrivalDate)
                        <div class="input-group date">
                            @Html.TextBoxFor(model => model.ArrivalDate, new { @class = "  form-control form-control-sm dateRange" })
                            <div class="input-group-append">
                                <div class="input-group-text"><i class="far fa-calendar-alt"></i></div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.Amount)
                        @Html.TextBoxFor(model => model.Amount, new { @class = "  form-control form-control-sm ",@type="number" })

                    </div>

                    <div class="col-sm-2">
                        @Html.LabelFor(model => model.Designation)
                        @Html.TextBoxFor(model => model.Designation, new { @class = "  form-control form-control-sm " })
                        @Html.ValidationMessageFor(model => model.Designation)

                    </div>


                </div>

                <div class="form-group row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Description)
                        @Html.TextAreaFor(Model =>Model.Description , new { @class = "  form-control form-control-sm"})
                        @Html.ValidationMessageFor(model => model.Description)

                    </div>

                </div>





            </div>
        </div>
    </form>



    <div class="card card-secondary">

        <div class="card-header">
            @*<h3 class="card-title">TransportAllownace Details </h3>*@
            <h3 class="card-title">Travelling,Lumpsum & Food And Other Expenses</h3>
        </div>

        <div class="card-body">
            @if (Model.Edit != "Close")
            {
                @*<button type="button" title="Add TADABill Details" id="TADABillAddRow" class="btn btn-lg btn-success mb-2"> <i class="fa fa-plus"></i> </button>*@
                <button type="button" title="Add TADABill Details" id="TransportAllowanceAddRow" class="btn btn-lg btn-success mb-2"> <i class="fa fa-plus"></i> </button>

            }
            @*<table class="table table-bordered table-striped table-sm" id="TADABillDetails">*@
            <table class="table table-bordered table-striped table-sm" id="TransportAllowanceItemList">
                <thead>

                    <tr>
                       <th data-type="date" style="width: 15%;" data-name="Date">Date</th>
                        <th data-type="text" style="width: 45%;"  data-name="Particulars">Particulars</th>
                        <th data-type="decimal" style="width: 35%;" data-name="Amount">Amount</th>
                    </tr>


                </thead>
                <tbody id="MRWiseChangeLogBody">
                    @foreach (var item in Model.TransportAllownaceDetails)
                    {
                        <tr>

                            <td> @item.Date</td>
                            <td> @item.Particulars</td>
                            <td> @item.Amount</td>
                            <td> <button class="btn btn-danger btn-sm remove-row-btn"><i class='fa fa-trash'></i></button> </td>

                        </tr>

                    }
                </tbody>
            </table>


        </div>
    </div>


    <div class="card card-secondary">

        <div class="card-header">
            <h3 class="card-title">Food And Others</h3>
        </div>

        <div class="card-body">
            @if (Model.Edit != "Close")
            {
                
                <button type="button" title="Add TADABill Details" id="TransportAllowanceOthersAddRow" class="btn btn-lg btn-success mb-2"> <i class="fa fa-plus"></i> </button>

            }
            
            <table class="table table-bordered table-striped table-sm" id="TransportAllowanceOthersList">
                <thead>

                    <tr>
                        <th data-type="date" style="width: 15%;" data-name="Date">Date</th>
                        <th data-type="text" style="width: 45%;" data-name="Details">Details</th>
                        <th data-type="decimal" style="width: 35%;" data-name="Amount">Amount</th>
                    </tr>


                </thead>
                <tbody id="FoodBody">
                    @foreach (var item in Model.TransportFoodAndOthersDetails)
                    {
                        <tr>


                            <td> @item.Date</td>
                            <td> @item.Details</td>
                            <td> @item.Amount</td>
                            <td> <button class="btn btn-danger btn-sm remove-row-btnOthers"><i class='fa fa-trash'></i></button> </td>


                        </tr>

                    }
                </tbody>
            </table>


        </div>
    </div>



    @*LessAdvance*@

    <div class="card card-secondary">

        <div class="card-header">
            <h3 class="card-title">Less Advance And Others</h3>
        </div>

        <div class="card-body">
            @if (Model.Edit != "Close")
            {

                <button type="button" title="Add Details" id="LessAdvanceAddRow" class="btn btn-lg btn-success mb-2"> <i class="fa fa-plus"></i> </button>

            }

            <table class="table table-bordered table-striped table-sm" id="LessAdvanceOthersList">
                <thead>

                    <tr>
                        <th data-type="date" style="width: 15%;" data-name="Date">Date</th>
                        <th data-type="text" style="width: 45%;" data-name="Details">Details</th>
                        <th data-type="decimal" style="width: 35%;" data-name="Amount">Amount</th>
                    </tr>


                </thead>
                <tbody id="FoodBody">
                    @foreach (var item in Model.LessAdvanceDetails)
                    {
                        <tr>


                            <td> @item.Date</td>
                            <td> @item.Details</td>
                            <td> @item.Amount</td>
                            <td> <button class="btn btn-danger btn-sm remove-row-btnLessAdvance"><i class='fa fa-trash'></i></button> </td>


                        </tr>

                    }
                </tbody>
            </table>


        </div>
    </div>



    @*<div class="card">
    <div class="card-header p-2">
    @if (Model.Operation.Equals("update", StringComparison.OrdinalIgnoreCase))
    {
    <button type="button" class="button btnsave sslUpdate">Update</button>
    }
    else
    {
    <button class="button btnsave sslSave" type="button" id="">Save</button>
    }
    </div>
    </div>*@


    @if (Model.Edit.Equals("TransportReport", StringComparison.OrdinalIgnoreCase))
    {
        <div class="card">
            <div class="card-header p-2">

                <button id="downloadButton" title="Report preview" class="button  addNewButton mb-2 mb-2 pull-right ">Preview</button>
                @*<button id="downloadButtonLocalConveyance" title="Report preview" class="button  addNewButton mb-2 mb-2 pull-right ">LocalConveyancePreview</button>*@

            </div>
        </div>
    }
    else
    {
        @if (Model.Edit.Equals("approve", StringComparison.OrdinalIgnoreCase))
        {
            <div class="card">
                <div class="card-header p-2">
                    <button type="button" class="button btnReject sslUnPost" data-toggle="modal" data-target="#modal-defaultReject">Reject</button>
                    <button type="button" class="button btnApproved sslUpdate" data-toggle="modal" data-target="#modal-defaultApproved">Approved</button>
                </div>
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-header p-2">

                    @if (Model.Operation.Equals("update", StringComparison.OrdinalIgnoreCase))
                    {
                        <button type="button" class="button btnsave sslUpdate">Update</button>                     
                        <button type="button" class="button btnPost sslPost">Post</button>

                        if (Model.IsPost.Equals("Y", StringComparison.OrdinalIgnoreCase))
                        {

                            <button type="button" class="button btnUnPost sslUnPost" data-toggle="modal" data-target="#modal-default">UnPost</button>

                        }
                        else
                        {
                            <button type="button" class="button btnUnPost sslUnPost" data-toggle="modal" style="display:none;" data-target="#modal-default">UnPost</button>

                        }

                    }
                    else
                    {

                        <button class="button btnsave sslSave" type="button" id="">Save</button>                      
                        <button class="button btnPost sslPost" type="button" id="SavePost" style="display:none;">Post</button>
                        <button type="button" class="button btnUnPost sslUnPost" data-toggle="modal" style="display:none;" data-target="#modal-default">UnPost</button>

                    }

                </div>
            </div>
        }
    }


</div>


@section scripts{

    <script src="/js/app/Services/CommonService.js"></script>


    <script src="/js/app/Services/TransportAllownacesService.js"></script>
    <script src="/js/app/Services/TransportApproveStatusService.js"></script>

    <script src="/js/app/Controllers/TransportAllownacesController.js"></script>
    <script src="/js/app/Controllers/TransportApproveStatusController.js"></script>

    <script>
        $(document).ready(function () {

            TransportAllownacesController.init();
            TransportApproveStatusController.init();

        });

    </script>


}
